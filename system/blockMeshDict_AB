/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  8
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Note: this file is a Copy of $FOAM_TUTORIALS/resources/blockMesh/pitzDaily

convertToMeters 0.001;

vertices
(
    (-30 -4 -0.5)  // 0
    (0 -4 -0.5)    // 1
    (0.5 -4 -0.5)  // 2
    (190 -4 -0.5)  // 3
    (190 0 -0.5)   // 4
    (190 7 -0.5)   // 5
    (1.5 7 -0.5)   // 6
    (0.5 0 -0.5)   // 7
    (0 0 -0.5)     // 8
    (0 7 -0.5)     // 9
    (-30 7 -0.5)   //10
    (-30 0 -0.5)   //11

    (-30 -4 0.5)   //12
    (0 -4 0.5)     //13
    (0.5 -4 0.5)   //14
    (190 -4 0.5)   //15
    (190 0 0.5)    //16
    (190 7 0.5)    //17
    (1.5 7 0.5)    //18
    (0.5 0 0.5)    //19
    (0 0 0.5)      //20
    (0 7 0.5)      //21
    (-30 7 0.5)    //22
    (-30 0 0.5)    //23
    

);

negY
(
    (2 4 1)
    (1 3 0.3)
);

posY
(
    (1 4 2)
    (2 3 4)
    (2 4 0.25)
);

posYR
(
    (2 1 1)
    (1 1 0.25)
);


blocks
(
    hex (11 8 9 10 23 20 21 22)   //block 0
    ()
    simpleGrading ()

    hex (0 1 8 11 12 13 20 23)    //block 1
    ()
    edgeGrading ()

    hex (1 2 7 8 13 14 19 20)     //block 2
    ()
    edgeGrading ()

    hex (7 4 5 6 19 16 17 18)     //block 3
    ()
    simpleGrading ()

    hex (2 3 4 7 14 15 16 19)     //block 4
    ()
    simpleGrading ()
);

edges
(
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            ()
	    ()
        );
    }
    outlet
    {
        type patch;
        faces
        (
            ()
            ()
        );
    }
    upperWall
    {
        type wall;
        faces
        (
            ()
            ()
            ()
            ()
	    ()
        );
    }
    lowerWall
    {
        type wall;
        faces
        (
            ()
            ()
            ()
        );
    }
    frontAndBack
    {
        type empty;
        faces
        (
            ()
            ()
            ()
            ()
            ()
            ()
            ()
            ()
            ()
            ()
        );
    }
);

// ************************************************************************* //
